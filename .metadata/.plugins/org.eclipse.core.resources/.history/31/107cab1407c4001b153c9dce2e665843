<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">
		

	<context:component-scan base-package="com.springbook.biz">
	</context:component-scan>
	
	<bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean>
	<bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"/>
	<bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice" />
	<bean id="after" class="com.springbook.biz.common.AfterAdvice"/>
	<bean id="around" class="com.springbook.biz.common.AroundAdvice"/>
	
	<aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>
		<!-- get으로 시작하는 것을 getPointcut으로 설정. -->
		<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))"/>
		<!-- 로그라는 객체를 advice 객체로 설정하고  -->
		<aop:aspect ref="afterReturning">
			<aop:around pointcut-ref="allPointcut" method="afterLog" returning="returnObj"/>
		</aop:aspect>
		
	</aop:config>

</beans>
